// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace GetCompany.Controllers
{
    public partial class ProjectController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProjectController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ProjectController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteProject()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteProject);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditProject()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditProject);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult popUpPartial()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.popUpPartial);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ProjectController Actions { get { return MVC.Project; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Project";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Project";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string ProjectHome = "ProjectHome";
            public readonly string AddProject = "AddProject";
            public readonly string DeleteProject = "DeleteProject";
            public readonly string EditProject = "EditProject";
            public readonly string popUpPartial = "popUpPartial";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string ProjectHome = "ProjectHome";
            public const string AddProject = "AddProject";
            public const string DeleteProject = "DeleteProject";
            public const string EditProject = "EditProject";
            public const string popUpPartial = "popUpPartial";
        }


        static readonly ActionParamsClass_AddProject s_params_AddProject = new ActionParamsClass_AddProject();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddProject AddProjectParams { get { return s_params_AddProject; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddProject
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_DeleteProject s_params_DeleteProject = new ActionParamsClass_DeleteProject();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteProject DeleteProjectParams { get { return s_params_DeleteProject; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteProject
        {
            public readonly string projectCode = "projectCode";
        }
        static readonly ActionParamsClass_EditProject s_params_EditProject = new ActionParamsClass_EditProject();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditProject EditProjectParams { get { return s_params_EditProject; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditProject
        {
            public readonly string projectCode = "projectCode";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_popUpPartial s_params_popUpPartial = new ActionParamsClass_popUpPartial();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_popUpPartial popUpPartialParams { get { return s_params_popUpPartial; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_popUpPartial
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AddProject = "AddProject";
                public readonly string EditProject = "EditProject";
                public readonly string popUpPartial = "popUpPartial";
                public readonly string ProjectHome = "ProjectHome";
            }
            public readonly string AddProject = "~/Views/Project/AddProject.cshtml";
            public readonly string EditProject = "~/Views/Project/EditProject.cshtml";
            public readonly string popUpPartial = "~/Views/Project/popUpPartial.cshtml";
            public readonly string ProjectHome = "~/Views/Project/ProjectHome.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ProjectController : GetCompany.Controllers.ProjectController
    {
        public T4MVC_ProjectController() : base(Dummy.Instance) { }

        [NonAction]
        partial void ProjectHomeOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ProjectHome()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ProjectHome);
            ProjectHomeOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddProjectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddProject()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddProject);
            AddProjectOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddProjectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, GetCompany.Models.ProjectModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddProject(GetCompany.Models.ProjectModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddProject);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddProjectOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void DeleteProjectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectCode);

        [NonAction]
        public override System.Web.Mvc.ActionResult DeleteProject(string projectCode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteProject);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectCode", projectCode);
            DeleteProjectOverride(callInfo, projectCode);
            return callInfo;
        }

        [NonAction]
        partial void EditProjectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string projectCode);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditProject(string projectCode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditProject);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "projectCode", projectCode);
            EditProjectOverride(callInfo, projectCode);
            return callInfo;
        }

        [NonAction]
        partial void EditProjectOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, GetCompany.Models.ProjectModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditProject(GetCompany.Models.ProjectModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditProject);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EditProjectOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void popUpPartialOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.ActionResult popUpPartial(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.popUpPartial);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            popUpPartialOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
